fencing:
  name: 'http_json'
  expression: >-
    to_entries | .[] |
    {"board_id": .key, "sensor_type": "geolocation",
    "sensor_data": .value.action}
  feed_interval: 60
  fail_interval: 30
  mqtt_topic: 'dbsm/metric'
  params:
    method: 'GET'
    url: 'https://example.com/geolocation.php'
    auth_user: 'username'
    auth_pass: 'password'

sunrise_sunset:
  name: 'http_json'
  expression: >-
    .sys | {"board_id": "openweather", "sensor_type": "sunset",
    "sensor_data": .sunset | tostring}, {"board_id": "openweather",
    "sensor_type": "sunrise", "sensor_data": .sunrise | tostring}
  feed_interval: 1200
  fail_interval: 300
  mqtt_topic: 'dbsm/metric'
  params:
    method: 'GET'
    url: 'http://api.openweathermap.org/data/2.5/weather'
    params:
      APPID: 'APP_ID'
      lat: 'XX.XXXXXX'
      lon: 'YY.YYYYYY'

msd:
  name: 'sql_query'
  expression: >-
    .[] | {"board_id": .[0], "sensor_type": "msd",
    "sensor_data": .[1] | tostring}
  feed_interval: 120
  fail_interval: 60
  mqtt_topic: 'executor/metric'
  params:
    db_string: 'sqlite:////etc/mgw/mgw.db'
    db_query: >-
      SELECT board_id,max(last_update) FROM
      last_metrics GROUP BY board_id
